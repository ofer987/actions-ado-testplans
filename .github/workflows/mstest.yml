name: MsTest

on:
  workflow_dispatch:
    

jobs:

  build:
    runs-on: windows-latest  # For a list of available runner types, refer to
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      
    - name: Install Dependencies
      shell: bash
      run: |
        export PATH="$PATH:/root/.dotnet/tools"
        dotnet new tool-manifest
        dotnet tool install --local SpecSync.AzureDevOps --version 3.4.1
        dotnet specsync version

    - name: run specsync 1
      if: always()
      shell: bash
      working-directory: custom/MsTestSample
      run: |
        dotnet tool restore
        dotnet specsync push
        dotnet specsync pull
        git status
        
    # Execute all unit tests in the solution
    - name: Execute unit tests
      working-directory: MsTestSample
      run: |
        dotnet test --logger "trx;LogFileName=TestResults.trx"
        ls -R
        
    - uses: dorny/paths-filter@v2.11.1
      if: always()
      id: filter
      with:
        base: HEAD
        filters: |
          src:
            - added|deleted|modified: '**.cs'

    # Execute all unit tests in the solution
    - name: print 
      if: always()    
      run: |
        echo "Filter: ${{ steps.filter.outputs.src }}"
        
    - name: Create Pull Request
      if: false
      id: create_pr
      uses: peter-evans/create-pull-request@v4.2.3
      with:
        add-paths: '**.cs'
        token: ${{ github.token }}
        commit-message: Updated CS with Azure DevOps Tags
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: true
        branch: ado-sync-${{ github.run_id }}
        delete-branch: true
        title: '[Cucumber Azure DevOps Sync] Automated Pull Request'
        body: |
          Updated Features with Azure DevOps Tags
          - Auto-generated by [ado-testplans-sync][1]
          [1]: https://github.com/tr/cicd_gh-actions-ado-testplans-sync/actions/runs/${{ github.run_id }}
        labels: |
          ado sync
        draft: false
          
    - name: run specsync 2
      if: always()
      shell: bash
      working-directory: MsTestSample
      run: |
        dotnet tool restore
        dotnet specsync publish-test-results --testResultFile ${{github.workspace}}/TestResults.trx
        
    - name: create bugs for last run failure
      uses: ./create-bugs
      with:
        organization: tr-ihn-sandbox
        ado_pat: ${{ secrets.ADO_PAT }}
        project: Azure-DevOps-Training
        area: 'Release 1'
        # Bug:
          # New defect reported
          # Build Failure
        # Task:
          # New task
        reason: 'New defect reported'
        tags: "${{ github.run_id }}, ${{ github.workflow }}, Automated"
        runId: ${{ env.ado_run_id }}
        # bug
        # task
        workItemType: 'bug'
        assignedTo: 'Pavan Mudigonda'