name: 'Cucumber to Azure DevOps Test Plans Sync'
author: 'PavanMudigonda'
description: 'A GitHub Action that Synchronizes Cucumber Test Cases and Test Results from GitHub to Azure DevOps'

branding:
  icon: 'repeat'
  color: 'red'

inputs:
  env:
    description: 'Test Environment'
    required: false
    default: 'QA'
  enable_auto_pr_merge:
    description: 'Enable Auto Cucumber PR Merge'
    required: false
    default: 'true'    
  artifactory_token:
    description: 'JFROG TOKEN'
    required: true
  artifactory_user:
    description: 'JFROG USER'
    required: true
  github_token:
    description: 'GitHub API Access Token'
    default: ${{ github.token }}
    required: false
  test_cases_sync:  
    description: 'Test Cases Sync'
    required: true
    default: 'false'
  test_results_sync:
    description: 'Test Results Sync - Format Supported'
    required: false
    default: 'false'  
  ado_pat:
    description: 'Azure DevOps PAT'
    required: true
  ado_project_url:
    description: 'ADO Project URL'
    required: true
  git_user_email:
    description: 'Default Github Actions Email'
    required: false
    default: 'actions@github.com'
  git_user_name:
    description: 'Default Github Actions Name'
    required: false
    default: 'GitHub Actions'
  cucumber_branch_name:
    description: 'Default Github Actions Name'
    required: false
    default: 'cucumber-ado-sync-${{ inputs.github.run_id }}'
  temp_cucumber_branch_name:
    description: 'Default Github Actions Name'
    required: false
    default: 'temp-cucumber-ado-sync'
  test_results_run_name:
    description: 'Test Result - Run NAme'
    required: false
    default: GH-Actions-${{ github.run_id }}
  test_results_attached_files:
    description: 'Test Result '
    required: false
    default: GH-Actions-${{ github.run_id }}    
outputs:
  ado_test_run_url:
    value: ${{ steps.ado_run_step.outputs.ADO_RUN_URL }}
    description: ADO Test Run URL

runs:
  using: 'composite'
  steps:

      - name: Check If there is a change in Test Results Path in local
        uses: dorny/paths-filter@v2
        if: ${{ inputs.test_results_sync }} 
        id: post-test-execution
        with:
          base: ${{ env.GITHUB_SHA }}
          filters: |
            test_results_file_path:
              - '${{ inputs.test_results_file_path }}/**'

      - name: Create SpecSync.json user specific setting
        if: ${{ inputs.test_cases_sync || inputs.test_results_sync }}
        shell: bash
        run: |
          cat > $HOME/.local/share/SpecSync/specsync.json <<EOF
          {
            "$schema": "http://schemas.specsolutions.eu/specsync4azuredevops-config-latest.json",
            "toolSettings": {
              "licensePath": "specsync.lic",
              "disableStats": false,
              "outputLevel": "normal",
              "parentConfig": "specsync-common.json",
              "ignoreParentConfig": false
            },
          "knownRemotes": [
            {
              "projectUrl": "https://dev.azure.com/myorg/*",
              "user": "ADO_PAT"
            }
          ]
          }
          EOF

      - uses: microsoft/variable-substitution@v1
        if: ${{ inputs.test_cases_sync || inputs.test_results_sync }}
        with:
          files: $HOME/.local/share/SpecSync/specsync-common.json, ./specsync.json
        env:
          knownRemotes.projectUrl: ${{ inputs.ado_project_url }}
          knownRemotes.user: ${{ inputs.ado_pat }}
          publishTestResults.runName: ${{ inputs.test_results_run_name }}-${{ inputs.env}} Environment

      - name: Download SpecSync License From Artifactory
        shell: bash
        env:
          ARTIFACTORY_TOKEN: ${{ inputs.ARTIFACTORY_TOKEN }}
          ARTIFACTORY_USER: ${{ inputs.ARTIFACTORY_USER }}
        run: |
          curl -u ${ARTIFACTORY_USER}:${ARTIFACTORY_TOKEN} -O $HOME/.local/share/SpecSync/specsync.lic 'https://tr1.jfrog.io/artifactory/generic-local/devops-experience/specsync.lic'
          
      - name: Set up .NET 6
        if: ${{ inputs.test_cases_sync || inputs.test_results_sync }}
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: "6.0.x"

      - name: Install Dependencies
        if: ${{ inputs.test_cases_sync || inputs.test_results_sync }}
        shell: bash
        run: |
          sudo apt install zip unzip
          export PATH="$PATH:/root/.dotnet/tools";
          wget -O SpecSync.zip https://www.specsolutions.eu/media/specsync/SpecSync.AzureDevOps.3.3.6-linux-x64.zip && unzip SpecSync.zip;
          chmod +x SpecSync4AzureDevOps;
                    
      - name: Run Test Case Synchronization
        if: ${{ inputs.test_cases_sync }}
        shell: bash
        run: |
          chmod +x ./SpecSync4AzureDevOps;
          ./SpecSync4AzureDevOps push ./specsync.json;
          ./SpecSync4AzureDevOps pull ./specsync.json;

      - name: Run Test Results Synchronization with out Attachments
        if: ${{ inputs.test_results_sync == 'true' && inputs.test_results_attached_files == '' && always() }}
        id: sync_without_attachment
        shell: bash
        run: |
          chmod +x ./SpecSync4AzureDevOps;
          ./SpecSync4AzureDevOps publish-test-results --zeroExitCodeForWarnings ./specsync.json > output.txt;
          ADO_RUN_NUM_STRING="$( grep 'results as Test Run' output.txt | awk -F'[()]' '{print $2}')";
          ADO_RUN_NUM="$(echo $ADO_RUN_NUM_STRING | tr -dc '0-9' | sed 's/%//g')";
          echo ADO_RUN_NUM=$ADO_RUN_NUM >> $GITHUB_ENV
          echo "##[set-output name=ADO_RUN_NUM;]${ADO_RUN_NUM}";
          
      - name: Run Test Results Synchronization with Attachments
        if: ${{ inputs.test_results_sync == 'true' && inputs.test_results_attached_files != '' && always() }}
        id: sync_with_attachment
        shell: bash
        run: |
          chmod +x ./SpecSync4AzureDevOps;
          ./SpecSync4AzureDevOps publish-test-results --zeroExitCodeForWarnings --attachedFiles ${{ inputs.test_results_attached_files }} ./specsync.json > output.txt;
          ADO_RUN_NUM_STRING="$( grep 'results as Test Run' output.txt | awk -F'[()]' '{print $2}')";
          ADO_RUN_NUM="$(echo $ADO_RUN_NUM_STRING | tr -dc '0-9' | sed 's/%//g')";
          echo ADO_RUN_NUM=$ADO_RUN_NUM >> $GITHUB_ENV;
          echo "##[set-output name=ADO_RUN_NUM;]${{ env.ADO_RUN_NUM }}";

      - name: Output ADO RUN URL
        if: always()
        id: ado_run_step
        shell: bash
        run: |
          echo "ADO_RUN_URL=${{ inputs.ado_project_url }}/_testManagement/runs?_a=runCharts&runId=${{ env.ADO_RUN_NUM }}" >> $GITHUB_ENV
          echo "##[set-output name=ADO_RUN_URL;]${{ env.ADO_RUN_URL }}"

      - name: Publish Build/Job Summary
        shell: bash
        run: |
          cat >> ado.md << EOF
              ADO TEST RUN URL: ${{ env.ADO_RUN_URL }}
          EOF
          # Publish Job Summary
          cat ado.md >> $GITHUB_STEP_SUMMARY
        
      - uses: dorny/paths-filter@v2
        if: ${{ steps.pre-ado-sync.outputs.features && inputs.test_cases_sync && always()  }}
        id: post-ado-sync
        with:
          base: ${{ github.ref }}
          filters: |
            features:
              - '${{ inputs.cucumber_path }}/**'

      #  Commit Cucumber Feature Files to triggering branch or cucumber-ado-sync branch
      - name: Commit updates feature files
        if: ${{ steps.post-ado-sync.outputs.features == 'true' && inputs.test_cases_sync == 'true' }}
        shell: bash
        env:
          GITHUB_REF_NAME: ${{ env.GITHUB_REF_NAME }}
          GIT_USER_EMAIL: ${{ inputs.git_user_email }}
          GIT_USER_NAME: ${{ inputs.git_user_name }}
          cucumber_path: ${{ inputs.cucumber_path }}
          CUCUMBER_BRANCH_NAME: ${{ inputs.cucumber_branch_name }}
          TEMP_CUCUMBER_BRANCH_NAME: ${{ inputs.temp_cucumber_branch_name }}
        run: |
          git config --local user.email $GIT_USER_EMAIL
          git config --local user.name $GIT_USER_NAME
          if [ $GITHUB_REF_NAME != "main" ]
          then
            git pull --ff -q
            git add ${{ env.cucumber_path }}
            git commit -m 'Updated Cucumber Gherkins Features'
            git push
          fi
          git add ${{ env.cucumber_path }}/
          if [ `git branch -r --list "origin/${{ env.CUCUMBER_BRANCH_NAME }}"` ]
          then
              git checkout -b ${{ env.TEMP_CUCUMBER_BRANCH_NAME }}
              git commit -m "Updated cucumber branch"
              if [ $GITHUB_REF_NAME == "main" ]
              then
                git stash
              fi
              git checkout ${{ env.CUCUMBER_BRANCH_NAME }}
              git checkout ${{ env.TEMP_BADGE_BRANCH_NAME }} ${{ env.cucumber_path }}
              git add ${{ env.cucumber_path }}/
              git commit -m "Updated Cucumber Feature Files"
              git push --force
              git branch -D ${{ env.TEMP_CUCUMBER_BRANCH_NAME }}
          else
              git checkout -b ${{ env.CUCUMBER_BRANCH_NAME }}
              git commit -m "Updated Cucumber Feature Files"
              git push --set-upstream origin ${{ env.CUCUMBER_BRANCH_NAME }}
          fi

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ inputs.github_token }}
          commit-message: Updated Features with Azure DevOps Tags
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          signoff: true
          branch: ${{ inputs.cucumber_branch_name }}
          delete-branch: true
          title: '[Cucumber Azure DevOps Sync] Automated Pull Request'
          body: |
            Updated Features with Azure DevOps Tags
            - Auto-generated by [ado-specsync][1]
            [1]: https://github.com/tr/cicd_gh-actions-ado-specsync
          labels: |
            cucumber ado sync
            automated pr
          milestone: 1
          draft: false

      - name: Auto Approve Cucumber ADO Sync PR
        if: inputs.enable_auto_pr_merge
        uses: hmarr/auto-approve-action@v2
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          review-message: "Auto Approved Cucumber ADO Sync Automated PR"
        
      - name: Auto Merge PR to Main Line
        id: auto_merge
        if: inputs.enable_auto_pr_merge
        uses: "pascalgn/automerge-action@v0.15.3"
        env:
            GITHUB_TOKEN: "${{ inputs.github_token }}"
            MERGE_LABELS: "auto merge, cucumber ado sync"
            MERGE_METHOD: "merge"
            MERGE_COMMIT_MESSAGE: "Merged Cucumber ADO Sync"
            MERGE_RETRIES: "5"
            MERGE_RETRY_SLEEP: "10000"
            MERGE_REQUIRED_APPROVALS: "0"
            UPDATE_LABELS: "automerge"
            UPDATE_METHOD: "merge"
            PULL_REQUEST: ${{ steps.create_pr.outputs.pull-request-number }}
        
      - name: Print Auto Merge Output
        shell: bash
        if: steps.auto_merge.outputs.mergeResult == "merged"
        run: |
          echo "Pull request ${{ steps.create_pr.outputs.pull-request-number }} merged!"     
          
      - name: Erase SpecSync JSON and License Files
        if: always()
        shell: bash
        run: rm -rf $HOME/.local/share/SpecSync/specsync.json ./specsync.lic